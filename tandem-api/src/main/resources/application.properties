spring.application.name=tandem-backend

# Database Configuration (PostgreSQL in Docker)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/tandemdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:tandem}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:tandem_dev_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Connection Pool (HikariCP)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Secrets management (resolved before env vars)
spring.config.import=optional:file:.secrets/application-secrets.properties

# Jasypt encryption configuration
# Set JASYPT_TANDEM_ENCRYPTOR_PASSWORD as an environment variable to decrypt values
jasypt.encryptor.password=${JASYPT_TANDEM_ENCRYPTOR_PASSWORD:}
jasypt.encryptor.algorithm=PBEWithHMACSHA512AndAES_256
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.RandomIvGenerator

# Auth0 authentication (values provided by secrets file or environment)
auth0.domain=${AUTH0_DOMAIN:https://dev-3p5bpiz8p8aguazd.us.auth0.com}
auth0.client-id=${AUTH0_CLIENT_ID:ENC(j3xgekuj5NzJqskFz5rnDe4aYQNjc37+mHxiVcmfmsdhtBiKBoqcvdV9UkgmGRbwXx/L/vFTpiOjdQMqp9W8km9YCDlpMIVSQ2PBCXQSqZE=)}
auth0.client-secret=${AUTH0_CLIENT_SECRET:ENC(oFEJDQjTmNL7TiDkKWS3kagn0tqV+1SgdxweSJIxOd1ycmK2abgWcR0rIrzW/Bx8RVheUO3elz0Hjn+xy0AEnAsDHPZEdmnG2M0/yS9Y6JnB4VDKgFJ8gtB7BvMZKeWVsIyWM9t1772SSGe6wO1fHQ==)}
auth0.audience=${AUTH0_AUDIENCE:https://dev-3p5bpiz8p8aguazd.us.auth0.com/api/v2/}
auth0.realm=${AUTH0_REALM:Username-Password-Authentication}
# auth0.scope=${AUTH0_SCOPE:openid profile email offline_access}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${auth0.domain}/
spring.security.oauth2.resourceserver.jwt.audience=${auth0.audience}
